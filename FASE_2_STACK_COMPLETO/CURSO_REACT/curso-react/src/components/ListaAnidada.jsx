// üóÇÔ∏è PASOS L√ìGICOS RESUMIDOS:
// 1Ô∏è‚É£ Define funci√≥n componente y exp√≥rtala.
// 2Ô∏è‚É£ Crea array de categor√≠as con sub-items.
// 3Ô∏è‚É£ Devuelve contenedor general.
// 4Ô∏è‚É£ A√±ade t√≠tulo descriptivo.
// 5Ô∏è‚É£ Recorre categor√≠as con m√©todo de iteraci√≥n.
// 6Ô∏è‚É£ Dentro, muestra nombre de categor√≠a.
// 7Ô∏è‚É£ Recorre sub-items con m√©todo de iteraci√≥n anidado.
// 8Ô∏è‚É£ Genera elementos con claves √∫nicas y muestra cada item.


// üóÇÔ∏è PASOS L√ìGICOS RESUMIDOS:
// 1Ô∏è‚É£ Define funci√≥n componente y exp√≥rtala.
export default function ListaAnidada (){
// 2Ô∏è‚É£ Crea array de categor√≠as con sub-items.
    const categorias =[
        {categoria: "fruta",items:["manzana","pera","sandia"]},
        {categoria: "animales",items:["perro","gato","tortuga"]}
    ]
// 3Ô∏è‚É£ Devuelve contenedor general.
    return (
        <div>
{/* 4Ô∏è‚É£ A√±ade t√≠tulo descriptivo.*/}
            <h3>Lista Anidada</h3>
{/* 5Ô∏è‚É£ Recorre categor√≠as con m√©todo de iteraci√≥n.*/}
            {categorias.map((nombre,index)=>(
 // 6Ô∏è‚É£ Dentro, muestra nombre de categor√≠a.
                <div key={index}>
                    <h4>{nombre.categoria}</h4>
{/* 7Ô∏è‚É£ Recorre sub-items con m√©todo de iteraci√≥n anidado.*/}
                    <ul>
                        {nombre.items.map((item,idx)=>(
// 8Ô∏è‚É£ Genera elementos con claves √∫nicas y muestra cada item.
                            <li key={idx}>{item}</li>
                        ))}
                    </ul>
                </div>
               
            ))}
        </div>
    )
}